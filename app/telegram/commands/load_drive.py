import multiprocessing

from telegram import Update
from telegram.ext import ContextTypes

from app.core.logging_config import get_logger
from app.core.vector_store import store_documents_async
from app.services.google_drive import read_files_from_drive

logger = get_logger(__name__)


def _fetch_token_process(telegram_id: int, conn):
    from app.services.token_refresh_sync import get_valid_access_token_sync

    try:
        token = get_valid_access_token_sync(telegram_id)
        conn.send(token)
    except Exception as e:
        conn.send(e)
    finally:
        conn.close()


async def cmd_load_drive(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    telegram_id = update.effective_user.id
    logger.info(
        "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã /load_drive –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è telegram_id=%s", telegram_id
    )

    # –ü–æ–ª—É—á–µ–Ω–∏–µ access_token –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
    parent_conn, child_conn = multiprocessing.Pipe()
    proc = multiprocessing.Process(
        target=_fetch_token_process, args=(telegram_id, child_conn)
    )
    proc.start()
    result = parent_conn.recv()
    proc.join()

    if isinstance(result, Exception):
        logger.warning("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω: %s", result)
        await update.message.reply_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω Google. –ò—Å–ø–æ–ª—å–∑—É–π /connect_google"
        )
        return

    access_token = result
    logger.info("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ –¥–ª—è telegram_id=%s", telegram_id)

    async def progress_callback(text: str):
        logger.info("üì• %s", text)
        await update.message.reply_text(text)

    await update.message.reply_text("üîÑ –ù–∞—á–∏–Ω–∞—é —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
    logger.info("üìÅ –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å Google –î–∏—Å–∫–∞ –¥–ª—è telegram_id=%s", telegram_id)

    try:
        files = await read_files_from_drive(
            access_token, telegram_id, progress_callback
        )
        logger.info(
            "üìö –£—Å–ø–µ—à–Ω–æ —Å—á–∏—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: %d –¥–ª—è telegram_id=%s", len(files), telegram_id
        )
    except Exception as e:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤: %s", str(e))
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤.")
        return

    await update.message.reply_text(f"üìö –í—Å–µ–≥–æ —Å—á–∏—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")

    try:
        await update.message.reply_text(
            "üíæ –°–æ—Ö—Ä–∞–Ω—è—é –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –Ω–∞–ª–µ–π—Ç–µ –∫–æ—Ñ–µ–π–∫—É, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è"
        )
        logger.info(
            "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –ë–î –Ω–∞—á–∞—Ç–æ –¥–ª—è telegram_id=%s", telegram_id
        )

        await store_documents_async(files)

        logger.info(
            "‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –ë–î –∑–∞–≤–µ—Ä—à–µ–Ω–æ –¥–ª—è telegram_id=%s", telegram_id
        )
        await update.message.reply_text("‚úÖ –§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π!")

    except Exception as e:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –ë–î: %s", str(e))
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π.")
