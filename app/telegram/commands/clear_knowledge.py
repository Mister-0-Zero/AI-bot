from telegram import Update
from telegram.ext import ContextTypes
from app.core.vector_store import load_vector_db
from app.core.logging_config import get_logger

logger = get_logger(__name__)

VECTOR_DB_PATH = "app/data/chroma"  # –ø—É—Ç—å –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å persist_directory –≤ vector_store.py

async def cmd_clear_knowledge(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    telegram_id = update.effective_user.id
    logger.info("üìõ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –≤—ã–∑–≤–∞–ª –æ—á–∏—Å—Ç–∫—É —Å–≤–æ–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –ë–î", telegram_id)

    try:
        db = load_vector_db()
        logger.info("üîç –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: %d", len(db._collection.get()['ids']))

        # –£–¥–∞–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ telegram_id
        db._collection.delete(where={"user_id": telegram_id})
        logger.info("üßπ –£–¥–∞–ª–µ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å telegram_id=%s", telegram_id)

        await update.message.reply_text("üßπ –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π.")
    except Exception as e:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: %s", str(e))
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–≤–æ–∏—Ö –¥–∞–Ω–Ω—ã—Ö.")

