from urllib.parse import urlencode
from telegram import Update
from telegram.ext import ContextTypes, CommandHandler
from app.core.config import CLIENT_ID, CLIENT_SECRET, RAILWAY_DOMAIN
from app.core.state import put_state          
from app.telegram.bot import app_tg
from app.services.token_refresh import get_valid_access_token
from app.core.db import get_session
from app.services.google_drive import read_files_from_drive
import traceback
from app.core.logging_config import get_logger
from sqlmodel import select
from app.models.user import User

logger = get_logger(__name__)

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    error_text = f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {context.error}"
    if isinstance(update, Update) and update.message:
        await update.message.reply_text(error_text)

    # –¢–∞–∫–∂–µ –ª–æ–≥–∏—Ä—É–µ–º —Å—Ç–µ–∫
    logger.warning("–û—à–∏–±–∫–∞: %s", error_text)
    traceback.print_exception(type(context.error), context.error, context.error.__traceback__)


async def cmd_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = (
        "üìñ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã</b>:\n\n"
        "üü¢ <b>/start</b> ‚Äî –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n"
        "üõü <b>/help</b> ‚Äî –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n"
        "üîó <b>/connect_google</b> ‚Äî –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç Google –î–∏—Å–∫–∞\n"
        "üìÇ <b>/load_drive</b> ‚Äî –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª—ã —Å Google –î–∏—Å–∫–∞\n"
    )

    await update.message.reply_text(help_text, parse_mode="HTML")


async def cmd_start(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø AI-–±–æ—Ç.\n–ö–æ–º–∞–Ω–¥–∞ /connect_google –ø–æ–¥–∫–ª—é—á–∏—Ç —Ç–≤–æ–π Google-–î–∏—Å–∫."
    )


async def cmd_connect_google(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    if not (CLIENT_ID and CLIENT_SECRET):
        await update.message.reply_text("‚ö†Ô∏è Google OAuth –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
        return

    telegram_id = update.effective_user.id      

    # 1. –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º state –∏ –∑–∞–Ω–æ—Å–∏–º –≤ Redis
    state = await put_state(telegram_id)

    # 2. —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
    auth_url = (
        "https://accounts.google.com/o/oauth2/v2/auth?"
        + urlencode(
            {
                "client_id":    CLIENT_ID,
                "redirect_uri": f"https://{RAILWAY_DOMAIN}/oauth2callback",
                "response_type":"code",
                "scope":        "openid email profile https://www.googleapis.com/auth/drive.file",
                "state":        state,
                "access_type":  "offline",
                "prompt":       "consent",
            }
        )
    )


    await app_tg.bot.send_message(
        chat_id=telegram_id,
        text=f"–ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Google:\n{auth_url}"
    )


async def cmd_load_drive(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    telegram_id = update.effective_user.id

    async with get_session() as session:
        try:
            logger.info("üì® –ü–æ–ª—É—á–µ–Ω telegram_id –ø—Ä–∏ /load_drive: %s", telegram_id)
            logger.info("üì® –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–æ–∫–µ–Ω—É –¥–ª—è telegram_id=%s", telegram_id)
            logger.info("üë§ –¢–∏–ø telegram_id: %s (%s)", telegram_id, type(telegram_id))
            
            users = await session.exec(select(User))
            all_users = users.all()
            logger.info("üìã –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: %s", [u.telegram_id for u in all_users])
            access_token = await get_valid_access_token(telegram_id, session)
        except Exception:
            await update.message.reply_text(
                "‚ùå –£ —Ç–µ–±—è –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω Google –î–∏—Å–∫.\n\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /connect_google"
            )
            return

        await update.message.reply_text("üîÑ –ù–∞—á–∏–Ω–∞—é —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")

        async def progress_callback(text: str):
            await update.message.reply_text(text)

        files = await read_files_from_drive(access_token, progress_callback)

        await update.message.reply_text(f"üìö –í—Å–µ–≥–æ —Å—á–∏—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")


def register_handlers():
    app_tg.add_handler(CommandHandler("start", cmd_start))
    app_tg.add_handler(CommandHandler("connect_google", cmd_connect_google))
    app_tg.add_handler(CommandHandler("load_drive", cmd_load_drive))
    app_tg.add_handler(CommandHandler("help", cmd_help))